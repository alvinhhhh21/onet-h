<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Onet Game</title>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');
        body {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            background: #333;
            color: #fff;
            font-family: 'Roboto', sans-serif;
            margin: 0;
        }
        #gameBoard {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));
            grid-gap: 5px;
            margin-bottom: 20px;
            width: 90%;
            max-width: 500px;
        }
        .tile {
            width: 100%;
            height: 50px;
            background: #fff;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 24px;
            cursor: pointer;
            border-radius: 8px;
            transition: transform 0.2s, background-color 0.2s;
        }
        .tile:hover {
            transform: scale(1.1);
        }
        .matched {
            background: #0f0;
            animation: fadeOut 1s forwards;
        }
        @keyframes fadeOut {
            to {
                opacity: 0;
            }
        }
        .controls {
            display: flex;
            justify-content: center;
            flex-wrap: wrap;
        }
        button {
            width: 100px;
            height: 50px;
            margin: 10px;
            font-size: 18px;
            font-family: 'Roboto', sans-serif;
            border: none;
            border-radius: 8px;
            background-color: #555;
            color: #fff;
            cursor: pointer;
            transition: background-color 0.3s;
        }
        button:hover {
            background-color: #777;
        }
        .status {
            margin-bottom: 20px;
            text-align: center;
            font-size: 20px;
        }
    </style>
</head>
<body>
    <div class="status">
        <div>Skor: <span id="score">0</span></div>
        <div>Waktu: <span id="timer">60</span> detik</div>
        <div>Level: <span id="level">1</span></div>
    </div>
    <div id="gameBoard"></div>
    <div class="controls">
        <button id="shuffle">Kocok</button>
        <button id="mute">Mute</button>
    </div>
    <audio id="backgroundSound" src="background.mp3" preload="auto" loop></audio>
    <audio id="matchSound" src="match.mp3" preload="auto"></audio>
    <audio id="shuffleSound" src="shuffle.mp3" preload="auto"></audio>
    <audio id="levelUpSound" src="levelUp.mp3" preload="auto"></audio>
    <script>
        const symbols = ['üê∂', 'üê±', 'üê≠', 'üêπ', 'üê∞', 'ü¶ä', 'üêª', 'üêº', 'üê®', 'üêØ'];
        let tiles = [];
        let firstTile = null;
        let secondTile = null;
        let score = 0;
        let time = 60;
        let level = 1;
        let timerInterval;
        let isMuted = false;

        function createTiles() {
            tiles = [];
            const numPairs = level * 2 + 4; // Tingkatkan jumlah pasangan ubin dengan level
            const selectedSymbols = symbols.slice(0, numPairs / 2);
            for (let i = 0; i < 2; i++) {
                for (let symbol of selectedSymbols) {
                    tiles.push({ symbol, matched: false });
                }
            }
            tiles = shuffle(tiles);
        }

        function shuffle(array) {
            for (let i = array.length - 1; i > 0; i--) {
                const j = Math.floor(Math.random() * (i + 1));
                [array[i], array[j]] = [array[j], array[i]];
            }
            return array;
        }

        function displayTiles() {
            const gameBoard = document.getElementById('gameBoard');
            gameBoard.innerHTML = '';
            tiles.forEach((tile, index) => {
                const tileDiv = document.createElement('div');
                tileDiv.classList.add('tile');
                if (tile.matched) tileDiv.classList.add('matched');
                tileDiv.dataset.index = index;
                tileDiv.innerHTML = tile.matched || tile === firstTile || tile === secondTile ? tile.symbol : '';
                tileDiv.addEventListener('click', onTileClick);
                gameBoard.appendChild(tileDiv);
            });
        }

        function onTileClick(event) {
            const index = event.target.dataset.index;
            const tile = tiles[index];

            if (tile.matched || tile === firstTile || tile === secondTile) return;

            if (!firstTile) {
                firstTile = tile;
                displayTiles();
            } else if (!secondTile) {
                secondTile = tile;
                displayTiles();

                if (firstTile.symbol === secondTile.symbol) {
                    firstTile.matched = true;
                    secondTile.matched = true;
                    score += 10;
                    updateScore();
                    playSound('matchSound');
                    firstTile = null;
                    secondTile = null;
                    setTimeout(() => {
                        displayTiles();
                        if (tiles.every(tile => tile.matched)) {
                            levelUp();
                        }
                    }, 500);
                } else {
                    setTimeout(() => {
                        firstTile = null;
                        secondTile = null;
                        displayTiles();
                    }, 1000);
                }
            }
        }

        function updateScore() {
            document.getElementById('score').innerText = score;
        }

        function startTimer() {
            timerInterval = setInterval(() => {
                time--;
                document.getElementById('timer').innerText = time;
                if (time === 0) {
                    clearInterval(timerInterval);
                    alert('Waktu habis! Skor Anda: ' + score);
                    resetGame();
                }
            }, 1000);
        }

        function resetGame() {
            score = 0;
            time = 60;
            level = 1;
            createTiles();
            firstTile = null;
            secondTile = null;
            displayTiles();
            updateScore();
            document.getElementById('timer').innerText = time;
            document.getElementById('level').innerText = level;
            clearInterval(timerInterval);
            startTimer();
        }

        function levelUp() {
            level++;
            time = 60;
            createTiles();
            firstTile = null;
            secondTile = null;
            displayTiles();
            document.getElementById('level').innerText = level;
            playSound('levelUpSound');
            setTimeout(() => {
                alert('Selamat! Anda naik ke level ' + level);
            }, 100);
        }

        document.getElementById('shuffle').addEventListener('click', () => {
            createTiles();
            firstTile = null;
            secondTile = null;
            displayTiles();
            playSound('shuffleSound');
        });

        document.getElementById('mute').addEventListener('click', () => {
            const backgroundSound = document.getElementById('backgroundSound');
            if (isMuted) {
                backgroundSound.play();
                document.getElementById('mute').innerText = "Mute";
            } else {
                backgroundSound.pause();
                document.getElementById('mute').innerText = "Unmute";
            }
            isMuted = !isMuted;
        });

        function playSound(soundId) {
            const sound = document.getElementById(soundId);
            if (!isMuted) {
                sound.currentTime = 0;
                sound.play();
            }
        }

        function startBackgroundSound() {
            const backgroundSound = document.getElementById('backgroundSound');
            backgroundSound.play().catch(error => {
                console.log('Autoplay is blocked by the browser', error);
                // Create a play button to start the sound manually
                const playButton = document.createElement('button');
                playButton.innerText = "Mulai";
                playButton.style.width = "100px";
                playButton.style.height = "50px";
                playButton.style.margin = "10px";
                playButton.style.fontSize = "18px";
                playButton.style.border = "none";
                playButton.style.borderRadius = "8px";
                playButton.style.backgroundColor = "#555";
                playButton.style.color = "#fff";
                playButton.style.cursor = "pointer";
                playButton.addEventListener('click', () => {
                    backgroundSound.play();
                    playButton.remove();
                });
                document.body.appendChild(playButton);
            });
        }

        document.addEventListener('DOMContentLoaded', () => {
            resetGame();
            startBackgroundSound();
        });
    </script>
</body>
</html>
